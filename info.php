                <h2>PHP Smart Text</h2>
                <p class="medium mb">PHP Smart Text is a simple and lightweight machine learning and teachable model library in PHP, and uses MySQL database. PHP Smart Text is free and open-source.</p>
                <p class="medium mb">PHP Smart Text can be used to classify or generate text, which can be used make AI chatbots, detect spam, detect fake news, generate articles, poems, and more.</p>
                <p class="medium mb">You can create as many models as you like, and teach every model with different text inputs.</p>
                <p class="medium mb">For a more accurate text classification, please train the model with an equal amount of data for each classification, for example:<br>If you have two classification tags: "Spam" and "Not Spam", you need to train the model with a roughly equal amount of data classified as "Spam", and data classified as "Not Spam".<br>If for example, you trained the model with 1000 "Spam" data and 500 "Not Spam" data, the results can be very inaccurate.</p>
                <p class="medium mb">When deploying into production, you only need the library.php file (Which includes the class and all the functions) and the database with the trained models. Run ai_datasets.sql to create the database, and include library.php from your code, afterwards, create an instance of the class:<br><span style="background-color:#FFFFFF;"><span class="blue">$php_smart_text</span> = new PHPSmartText();</span><br><br>The connect the instance to the database: (Replace with your own credintials)<br><span style="background-color:#FFFFFF;"><span class="blue">$php_smart_text</span>->con = new mysqli("localhost","root","","ai_datasets");</span><br><br>These are the list of functions:</p>
                <div class="medium mb" style="background-color: #FFFFFF;">
                    <p class="mb"><span class="blue">$php_smart_text</span>->create_model(<span class="blue">$model_name</span>); <span class="green">/* Use this function to create a new model */</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->teach_model(<span class="blue">$model_name</span>, <span class="blue">$input_text</span>, <span class="blue">$input_keywords</span>, <span class="blue">$input_class</span>); <span class="green">/* Use this function to teach the model with the $input_text, you can add empty strings to $input_keywords and $input_class if you aren't using them */</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->delete_model(<span class="blue">$model_name</span>); <span class="green">/* Use this function to delete a model, among with all it&#39;s deleted data and categories.*/</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->add_or_update_category(<span class="blue">$model_name</span>, <span class="blue">$category_name</span>, <span class="blue">$possible_outputs</span>); <span class="green">/* Use this function to add or update a category to a model */</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->delete_category(<span class="blue">$category_id</span>); <span class="green">/* Use this function to delete a category*/</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->classify_text(<span class="blue">$model_name</span>, <span class="blue">$input</span>); <span class="green">/* Use this function to classify the text in the variable $input */</span></p>
                    <p class="mb"><span class="blue">$php_smart_text</span>->generate_text(<span class="blue">$model_name</span>, <span class="blue">$input</span>, <span class="blue">$generator_type</span>); <span class="green">/* Use this function to generate text, optionally add an input, and set $generator_type to either 1 or 2.<br>1 stands for: Simple(Whole content), use this if you want to get teached text as-is, based on $input, like if you are building a chatbot.<br>2 stands for: Advanced(Word-to-word), use this if you want to generate text completely, like if you are building an article generator */</span></p>